package xxh3

import "testing"

var vecs = [...]uint64{
	0x102030405060708,
	0x9e5a2f929066dd83,
	0x557c526728eb119a,
	0x227149eb997ce5d4,
	0xddccaa59e2dd84eb,
	0xfcce24fb8bc3b98e,
	0x7eee460685fb0c5a,
	0xe5dfb89080c281ac,
	0x31f4ab6d16b6c1ea,
	0x3ba9641a58c33f4,
	0x57b3b1854703f3ae,
	0x779206028d09d4b2,
	0x4bf98c829c5e1997,
	0x9400a93f9d90c8fe,
	0xc49f8426f7da17b1,
	0xe51b16e5c3ed8013,
	0x9fd3bffaf9d4f114,
	0xa21d299079f77eae,
	0xb79c1f6a5dd47002,
	0x14ff0b975f5e3f7f,
	0x3217c3db274b9cb7,
	0xdfc5e56211841a7a,
	0x7429ce172389bb1b,
	0x428621864b50a98b,
	0xcb4404753eb8f131,
	0xde00977b462fbf2e,
	0xca024fbed94b229b,
	0x6afab170c0b99206,
	0x20e70167e8063e5c,
	0x7fe3f0d17c778c43,
	0x8c9f3d3e03ef2f86,
	0x4c154997e93371fa,
	0x2e3b7637f430d9e7,
	0x40f05812a6a5fd43,
	0xb6fba1694e9c50a2,
	0x25fd75c1a045a7a0,
	0xb8aaf4812a0fe39c,
	0xeb52d41a93c327f8,
	0x27d71321f3ff485,
	0x71d5dc466833224c,
	0xb2b7083782c9d519,
	0x7c3641b92970ab71,
	0xf270e0c39925987d,
	0xbc00091c06c9d21a,
	0x1f2aeabdbc779eab,
	0x2d0b2d402e273b80,
	0xae3b9f378355eb24,
	0xf0ef67f8035cc272,
	0xdeee11b431770928,
	0xddf080649f3380d3,
	0x7d305b72ff9ded9e,
	0x19847956ddf97ef3,
	0xf4c5d92d19557481,
	0x1fb8de6f207b1b53,
	0xf3a3d43ef9ddb83d,
	0xf0de5e1025680740,
	0x15a80282284626aa,
	0xa07cb9daa72add84,
	0x119103ee7b58e965,
	0xb31a3b1a3920a862,
	0xcf2db13fa05860a0,
	0x10487839d20ba12b,
	0xbfdcb85ae4d88850,
	0x67d30b1bcff0b531,
	0x88b296cbac91440c,
	0x2c8e89e08dac1a24,
	0xae1a570ce40375d9,
	0xc41ac14fa18a287,
	0x73dade4a3356624f,
	0xf39bd317bd8cf878,
	0x5a8249d016d42fc3,
	0xa8d1b0f0987faf1e,
	0x60a308d7de1ee4cc,
	0x87b9f88e82cca979,
	0xce2c5c86314bedac,
	0x3ae8762045fde377,
	0xfea71f09e1cd2129,
	0x7e618fa2eda0a54b,
	0xb2268be3a8e88306,
	0xaf8b42a15bb4dfe,
	0x9a59c4ae3114a5dc,
	0xeb24d5a7451092e8,
	0xc6264f62c51e9204,
	0x7fcb9ea2cbcedd51,
	0xdd76347fbce8cfd,
	0xfbda5b8d900b3d8e,
	0xd461445051768819,
	0xe0fe586cd055cdc8,
	0xa0ac0e072cc90990,
	0x67c521c70271529d,
	0x6fe5876d9620a975,
	0xc046ec2ccad7e64a,
	0x7a9ae20c1190a788,
	0x4db1760daccf70a0,
	0x357e996333929003,
	0x13607c145d469b0c,
	0x991d048387e8f744,
	0xd8b89ba43d4abea9,
	0xd0a0cb2bb28d19e3,
	0xe93b4e7c10d8162d,
	0x3c6dd84bfe61c416,
	0x9344627fe5d27d20,
	0x72b82dcd8bfd9caf,
	0xa2396330aab4c9b2,
	0x4bf1ca9867b63f28,
	0x244985dc6934becb,
	0xbd7dc34d1f882450,
	0xa5050e826e7e6010,
	0xd8d3b491c606f3aa,
	0x363024dff721b70,
	0xd0e94945a930d2a1,
	0x2b8f874ff05b297c,
	0x4cf7ccbeb3d469c2,
	0x900ed7062f965f52,
	0xe8dcccb62f82a635,
	0xffd70e5b7829c90c,
	0xb185813d075613e7,
	0x3dca910dedd375b,
	0xa21ab3cf4f448cf8,
	0xadb8dd14069945b5,
	0xc391250c552d0d8a,
	0x817887b7d2c4eb36,
	0x3686527c8287d0b7,
	0x17c0a4650ccfcaf3,
	0x9c069dae51bf02df,
	0x2148045e528e12ef,
	0x9780baaa847af7e5,
	0x74d0039e958e956f,
	0xfa632d1ea94b14b5,
	0x2af3537b427fc9ee,
	0x4c69c10fb319db3c,
	0xc7d3b99ead0466db,
	0xb8231b08ee11177c,
	0x55e9c5ad354e0d1a,
	0x8449765f819662ae,
	0xa5ff7faf187d9a1f,
	0x4574dacdfe0c4443,
	0xb0e48fa50c8ba335,
	0x2618782a2d74d976,
	0x5d4fd468fcc45c20,
	0x8c62a135c8b49945,
	0xfd8d80a496043851,
	0x84f4e11c3e213971,
	0x3e6da498556324dd,
	0x2fa90449f687c8ec,
	0xb150d5233141a3ed,
	0xa99a27520fa9092,
	0xe91ba2b3bbf7dd34,
	0xe5924e0c4b846fb4,
	0x56c91bf9f2b74763,
	0xfbb5df8180903c80,
	0x31df6677290d521f,
	0x6fd5a2563f8d7e7d,
	0x578613055e4eb9c5,
	0xfb2f423cea825be0,
	0x17e689155a4d18ec,
	0x263722e9230a49e4,
	0xdeeb14be92c1f42f,
	0xb38bafefe33124a8,
	0xbc606f0afee00cdc,
	0x220f9d9a316010ca,
	0x54e605740e205ab7,
	0x1a85e23916c20411,
	0x1945e722ba3cb775,
	0xd33bfc88d282d6ec,
	0xaffa7ca3daf26226,
	0x4b139978cdb1493,
	0xc043e42c5c89c5a8,
	0x2d096821440bf015,
	0x7f41c7a9ceeda312,
	0xf1825399df2094d3,
	0x16bcdfff58badc60,
	0x2636c9b2c1245cdc,
	0xf1c91622f4452976,
	0xc84a4b06520caf79,
	0x5222b92e24c241d,
	0xf776551d7b0e814c,
	0x83d16a76804c7096,
	0xb90c662f8406adf9,
	0xc0a16d54defba2a,
	0x437ceaaacb5e19cd,
	0x2d31be98240f679c,
	0x6858b2c92ae4e23c,
	0xf0ae07a3b7cb72c0,
	0xaaa1289d30f6afd2,
	0x7cf916067d4d9e4b,
	0x3ca318fcf35567f0,
	0x47b1df8cd03a7da0,
	0xf4c1bde90e41165a,
	0xc93275478ed63359,
	0xb6025065427bf0f8,
	0x33397b3c0bd82795,
	0x2bbb4f8230eebc5d,
	0xe6fa6cef02a24427,
	0x8eee3a6a68c68f94,
	0xd41ab97f9d67aa02,
	0xa78ec0923b846f08,
	0xa43b565ce0a9faad,
	0x5624e2196980be22,
	0xbefe75ff3bb43624,
	0xbc9ae0616db1b2b8,
	0xa482432ac6567bb8,
	0xd00c1fd5fedb681e,
	0x59313a245dce774a,
	0x69ba89b1c04cc9ab,
	0xf86072043ab61e79,
	0xb35283e274ab52cf,
	0xa92b93108de99c10,
	0xebdddfa55171e2da,
	0xff3e04a75cbbdabf,
	0x8961fb12e06af669,
	0xd42eec6701a043d,
	0x26742f0fdb176c16,
	0x6f76db91bfb1e5e6,
	0x2678ad921406fb0c,
	0x3819fc4a8681f117,
	0x44a15e6b18a1a8f3,
	0x22858694e81a45e,
	0x4f8a60731bcf01a5,
	0x5337d12c459ab3db,
	0x836727242423b3be,
	0x1b24eba6aebce386,
	0x221aa44f6de66e0e,
	0xfd75778f25d6648,
	0x4d5cfa32c728ac57,
	0xe5fb299d13f95017,
	0xa53ccb8c334437df,
	0xbd9f119a2aa58c86,
	0x569803e81a3355a5,
	0xaf9354daaa259450,
	0x2f286c8f688fcf2b,
	0x643d3ca4b5b30ab8,
	0xfba15bdf315f3a1,
	0x83718ddb8129e8e4,
	0x91931e6622664d3a,
	0x2a817bbc44143b24,
	0x3743aed8046ceecd,
	0x2c1ded7c11f8a8bc,
	0x1c1a913de62114b9,
	0xab9ea50d87331ee2,
	0xc394600b7731832a,
	0x561f57cae7ac4e67,
	0xdfeaa5c6ab00b8fe,
	0x899bf1af92c8e344,
	0x3c17284665afeb79,
	0x254437fffdb7f137,
	0xfab6afb1227cf993,
	0xd26bfc4ae995707,
	0x6e8ecc9b6811c65a,
	0xa9b34fa6c8b43f17,
	0x41907581575f247,
	0x7d38641f1a189c8,
	0x66db2778330da840,
	0xd9a44de3df0c50ab,
	0x1d2375855d8f20a6,
	0x24cee29246d92d9b,
}

func TestXXH3(t *testing.T) {
	var data []byte

	for i, want := range vecs {
		data = append(data, byte(i))
		got := Hash(data[:i], 0x0102030405060708)
		if got != want {
			t.Errorf("Hash(...%d)=%x, want %x", i, got, want)
		}
	}
}
